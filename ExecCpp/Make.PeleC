PELEC_HOME        ?= ../
PELE_PHYSICS_HOME ?= $(PELEC_HOME)/Submodules/PelePhysics
AMREX_HOME        ?= $(PELEC_HOME)/Submodules/AMReX

TOP := $(PELEC_HOME)

EBASE = PeleC

# EXTERN_CORE is simply a list of the directories we use in Eos, Reactions, Transport and Util
# this list will be searched for runtime parameters
EXTERN_CORE ?=

# Ignore loops not vectorizing in amrex
ifeq ($(COMP), llvm)
  DEFINES += -Wno-pass-failed
endif

#Turn off all fortran in amrex
ifneq ($(USE_MASA), TRUE)
  BL_NO_FORT = TRUE
endif

#sundials stuff
ifeq ($(USE_SUNDIALS_PP), TRUE)
  ifeq ($(USE_CVODE_PP), TRUE)
     USE_ARKODE_PP=FALSE
     DEFINES += -DUSE_CVODE_PP
   else
     USE_ARKODE_PP=TRUE
  endif
  include $(PELE_PHYSICS_HOME)/ThirdParty/Make.ThirdParty
endif

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

# PeleC uses a coarse grained OMP approach
DEFINES += -DCRSEGRNDOMP

ifeq ($(USE_REACT), TRUE)
  DEFINES += -DPELEC_USE_REACTIONS
endif

ifeq ($(USE_EB), TRUE)
  DEFINES += -DPELEC_USE_EB
  ifneq ($(DIM), 3)
    $(error EB requires 3D)
  endif
endif

all: $(executable) 
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS

# EOS
ifeq ($(Eos_dir),$(filter $(Eos_dir),Fuego))
  EOS_HOME = $(PELE_PHYSICS_HOME)/Eos/Fuego
else
  EOS_HOME = $(PELE_PHYSICS_HOME)/Eos/GammaLaw
endif
EXTERN_CORE       += $(EOS_HOME)
INCLUDE_LOCATIONS += $(EOS_HOME)
VPATH_LOCATIONS   += $(EOS_HOME)
Bpack             += $(EOS_HOME)/Make.package
Blocs             += $(EOS_HOME)

# Reactions
REACTIONS_HOME     = $(PELE_PHYSICS_HOME)/Reactions
EXTERN_CORE       += $(REACTIONS_HOME)
INCLUDE_LOCATIONS += $(REACTIONS_HOME)
VPATH_LOCATIONS   += $(REACTIONS_HOME)
ifdef Chemistry_Model
  USE_FUEGO = TRUE
  DEFINES += -DPELEC_EOS_FUEGO
  CHEM_HOME = $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Models/$(Chemistry_Model)
  Blocs += $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation
endif
VPATH_LOCATIONS += $(CHEM_HOME)
Bpack += $(CHEM_HOME)/Make.package
Blocs += $(CHEM_HOME)

#sundials stuff
ifeq ($(USE_SUNDIALS_PP), TRUE)
  Blocs += $(REACTIONS_HOME)/Fuego
  Bpack += $(REACTIONS_HOME)/Fuego/Make.package
endif

# Transport
ifeq ($(Transport_dir), Simple)
  TRANSPORT_HOME = $(PELE_PHYSICS_HOME)/Transport/Simple
endif
ifeq ($(Transport_dir), Constant)
  TRANSPORT_HOME = $(PELE_PHYSICS_HOME)/Transport/Constant
endif
EXTERN_CORE       += $(TRANSPORT_HOME)
INCLUDE_LOCATIONS += $(TRANSPORT_HOME)
VPATH_LOCATIONS   += $(TRANSPORT_HOME)
Bpack             += $(TRANSPORT_HOME)/Make.package
Blocs             += $(TRANSPORT_HOME)

Bdirs := SourceCpp SourceCpp/Params/param_includes

Pdirs := Base Amr Boundary AmrCore
ifeq ($(USE_EB), TRUE)
  Pdirs += EB
endif

ifeq ($(USE_PARTICLES), TRUE)
  DEFINES+=-DAMREX_PARTICLES
  Pdirs += Particle
  DEFINES+=-DSPRAY_FUEL_NUM=$(SPRAY_FUEL_NUM)
  ifeq ($(USE_SPRAY_SOA), TRUE)
    DEFINES+=-DUSE_SPRAY_SOA
  endif
  Bpack   += $(PELEC_MP_HOME)/Source/PP_Spray/Make.package
  Blocs   += $(PELEC_MP_HOME)/Source/PP_Spray
  INCLUDE_LOCATIONS += $(AMREX_HOME)/Src/Particle
  VPATH_LOCATIONS   += $(AMREX_HOME)/Src/Particle
endif

Bpack += $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir)/Make.package)
Blocs += $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir))

Bpack += $(foreach dir, $(Bdirs), $(TOP)/$(dir)/Make.package)
Blocs += $(foreach dir, $(Bdirs), $(TOP)/$(dir))

$(info $${Blocs} is [${Blocs}])

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS += $(AMREX_HOME)/Tools/C_scripts

ifdef Chemistry_Model
  MNAMES += CHEMISTRY=$(Chemistry_Model)
endif

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "$(MNAMES)" \
          --GIT "$(TOP) $(AMREX_HOME) $(PELE_PHYSICS_HOME)"

include $(AMREX_HOME)/Tools/GNUMake/Make.rules

clean::
	$(SILENT) $(RM) extern.f90
	$(SILENT) $(RM) AMReX_buildInfo.cpp

#-----------------------------------------------------------------------------
# for debugging.  To see the value of a Makefile variable,
# e.g. Fmlocs, simply do "make print-Fmlocs".  This will
# print out the value.
print-%: ; @echo $* is $($*) ; $(SILENT) $(RM) AMReX_buildInfo.cpp
