Flamespeed tests

This folder sets up a 1d flamespeed test for PeleC.  It is based on the GRIMech-3.0 chemical model, and is designed to be used in two modes
1. Run for 'very long' integration times in order to find a steady flamespeed, given a grid spacing
2. Run for 'very short' integration times, as part of the regression test suite to verify the code

Flame initialization
====================

In this setup, a precomputed 1D flame solution is used to initialize data in 1-3 dimensions, along the "prob_axis" defined in the probin file selected in the input parameters. In 1d, the flame is in x, in 2d it is x or y, and in 3d it can be x, y or z.  The solution has probably been computed with PeleC in 1d, and extracted to an ascii text file.  In any case, the file is identified in the probin as the "pmf_datafile", and it should be formatted as a Tecplot data file in "POINT" ordering, e.g.:

VARIABLES = x Temp u rho X(H2) ... X(CH3CHO) pressure
ZONE I=1024
x_1 Temp_1 u_1 rho_1 X(H2)_1 ... X(CH3CHO)_1 pressure_1
...
x_1024 Temp_1024 u_1024 rho_1024 X(H2)_1024 ... X(CH3CHO)_1024 pressure_1024

In this example, the file contains a solution over N=1024 points, and will have N+2 lines, due to the header info expected.  Some rudimentary checking is done in pc_probinit here at initialization to confirm that the position (x or X), temperature (temp or Temp), velocity (u or x_velocity), density (density or rho), mole fractions of species SP (SP or X(SP)), and pressure, are specified in the correct order and have the species listed in an order consistent with the chemical model that is compiled into PeleC.  The profile given this way is linearly interpolated (using functions defined in "pmf_generic.f90) in order to set the boundary and initial data.  The flame solution may be specified on a nonuniform grid, and can be offset in the domain from its position in the file during the subsequent PeleC run via the probin variable, "flame_offset".  The units are expected to be in cgs.

A bash script, "sliceFinalSoln.sh", has been provided in this folder that will generate a flame-specification input file from a 1d plotfile computed with PeleC.  The script is run as `python sliceFinalSoln.sh plotfile` in order to produce a text file called "extract_plotfile.txt").  Note that this script requires the presence in this folder of AMReX's fextract executable, and for GRIMech-3.0, it has to be compiled with the "varnames" variable increased to length >= 500 or so.  The name of the executable for this may have to be modified in "sliceFinalSoln.sh", depending on the OS and compiler used to build fextract.


Computing the flamespeed
========================

After a run is finished and a set of plot files have been created as a time sequence, a python script "Compute_Flame_Speed.py" is provided to evaluate the instantaneous flame as SL = Integral(rho.omega_fu.dx) / (rhoY_fu).  This requires that "rho_omega_CH4" and "density" and "Y(CH4)" be included in the plotfiles.  The resulting file, "Flame_Speed.txt" will be a 3-colume text file, the first two columsn of which are time and SL.  The script searches for all plotfiles of the form plt*, and takes a single text argument (x, y or z) to indicate which direction to take slices of the solution for integration.

