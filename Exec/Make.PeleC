PELEC_HOME        ?= ../
PELE_PHYSICS_HOME ?= $(abspath $(lastword $(PELEC_HOME)/Submodules/PelePhysics))
AMREX_HOME        ?= $(abspath $(lastword $(PELE_PHYSICS_HOME)/Submodules/amrex))
SUNDIALS_HOME     ?= $(abspath $(lastword $(PELE_PHYSICS_HOME)/Submodules/sundials))

EBASE = PeleC

# EXTERN_CORE is simply a list of the directories we use in Eos, Reactions, Transport and Util
# this list will be searched for runtime parameters
EXTERN_CORE ?=

#Turn off all fortran in amrex
ifneq ($(USE_MASA), TRUE)
  BL_NO_FORT = TRUE
endif

USE_EB = TRUE
USE_SUNDIALS = TRUE

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

# PeleC uses a coarse grained OMP approach
DEFINES += -DCRSEGRNDOMP

ifeq ($(DIM), 1)
  $(error PeleC does not support 1D)
endif

UTILITY_HOME = $(PELE_PHYSICS_HOME)/Source/Utility/
VPATH_LOCATIONS += $(UTILITY_HOME)
INCLUDE_LOCATIONS += $(UTILITY_HOME)
Bpack += $(UTILITY_HOME)/TurbInflow/Make.package
Blocs += $(UTILITY_HOME)/TurbInflow

Bpack += $(UTILITY_HOME)/PltFileManager/Make.package
Blocs += $(UTILITY_HOME)/PltFileManager

Bpack += $(UTILITY_HOME)/Diagnostics/Make.package
Blocs += $(UTILITY_HOME)/Diagnostics

Bpack += $(UTILITY_HOME)/Filter/Make.package
Blocs += $(UTILITY_HOME)/Filter

all: $(executable)
ifneq ($(KEEP_BUILDINFO_CPP),TRUE)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
endif
	@echo SUCCESS

ifeq ($(USE_CUDA),TRUE)
   CXXFLAGS+=-Xptxas --disable-optimizer-constants
endif

# PelePhysics
PP_SRC_HOME = $(PELE_PHYSICS_HOME)/Source
EXTERN_CORE       += $(PP_SRC_HOME)
INCLUDE_LOCATIONS += $(PP_SRC_HOME)
VPATH_LOCATIONS   += $(PP_SRC_HOME)
Bpack             += $(PP_SRC_HOME)/Make.package
Blocs             += $(PP_SRC_HOME)

ifeq ($(PELE_COMPILE_AJACOBIAN), TRUE)
  DEFINES += -DPELE_COMPILE_AJACOBIAN
endif
ifeq ($(PELE_CVODE_FORCE_YCORDER), TRUE)
  DEFINES += -DPELE_CVODE_FORCE_YCORDER
endif

# EOS
EOS_HOME = $(PELE_PHYSICS_HOME)/Source/Eos/
ifeq ($(Eos_Model),$(filter $(Eos_Model),GammaLaw))
   DEFINES += -DUSE_GAMMALAW_EOS
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),Fuego))
   DEFINES += -DUSE_FUEGO_EOS
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),Soave-Redlich-Kwong))
   DEFINES += -DUSE_SRK_EOS
endif
EXTERN_CORE       += $(EOS_HOME)
INCLUDE_LOCATIONS += $(EOS_HOME)
VPATH_LOCATIONS   += $(EOS_HOME)
Bpack             += $(EOS_HOME)/Make.package
Blocs             += $(EOS_HOME)

# Reactions
REACTIONS_HOME = $(PELE_PHYSICS_HOME)/Source/Reactions
EXTERN_CORE       += $(REACTIONS_HOME)
INCLUDE_LOCATIONS += $(REACTIONS_HOME)
VPATH_LOCATIONS   += $(REACTIONS_HOME)
Bpack += $(REACTIONS_HOME)/Make.package
Blocs += $(REACTIONS_HOME)
include $(PELE_PHYSICS_HOME)/ThirdParty/Make.ThirdParty

ifdef Chemistry_Model
  CHEM_HOME = $(PELE_PHYSICS_HOME)/Mechanisms/$(Chemistry_Model)
endif
VPATH_LOCATIONS += $(CHEM_HOME)
Bpack += $(CHEM_HOME)/Make.package
Blocs += $(CHEM_HOME)

# Transport
TRANSPORT_HOME = $(PELE_PHYSICS_HOME)/Source/Transport
ifeq ($(Transport_Model),$(filter $(Transport_Model),Constant))
   DEFINES += -DUSE_CONSTANT_TRANSPORT
endif
ifeq ($(Transport_Model),$(filter $(Transport_Model),Simple))
   DEFINES += -DUSE_SIMPLE_TRANSPORT
endif
ifeq ($(Transport_Model),$(filter $(Transport_Model),Sutherland))
   DEFINES += -DUSE_SUTHERLAND_TRANSPORT
endif
EXTERN_CORE       += $(TRANSPORT_HOME)
INCLUDE_LOCATIONS += $(TRANSPORT_HOME)
VPATH_LOCATIONS   += $(TRANSPORT_HOME)
Bpack             += $(TRANSPORT_HOME)/Make.package
Blocs             += $(TRANSPORT_HOME)

Bdirs := $(PELEC_HOME)/Source $(PELEC_HOME)/Source/Params/param_includes

Pdirs := Base Amr Boundary AmrCore EB

# Spray
ifeq ($(USE_PARTICLES), TRUE)
  Pdirs += Particle
  ifeq ($(shell test $(SPRAY_FUEL_NUM) -gt 0; echo $$?), 0)
    DEFINES+=-DPELEC_USE_SPRAY
    DEFINES+=-DSPRAY_FUEL_NUM=$(SPRAY_FUEL_NUM)
    SPRAY_HOME = $(PELE_PHYSICS_HOME)/Source/Spray
    Bpack += $(SPRAY_HOME)/Make.package $(SPRAY_HOME)/Distribution/Make.package $(SPRAY_HOME)/BreakupSplash/Make.package
    Blocs += $(SPRAY_HOME) $(SPRAY_HOME)/Distribution $(SPRAY_HOME)/BreakupSplash
  endif
endif

# Soot
ifeq ($(USE_SOOT), TRUE)
  # Ensure the number of soot moments is correct
  ifeq (,$(filter $(NUM_SOOT_MOMENTS),3 6))
    $(error NUM_SOOT_MOMENTS must be 3 or 6)
  endif
  SOOT_HOME = $(PELE_PHYSICS_HOME)/Source/Soot
  DEFINES+=-DPELEC_USE_SOOT
  DEFINES+=-DNUM_SOOT_MOMENTS=$(NUM_SOOT_MOMENTS)
  Bpack   += $(SOOT_HOME)/Make.package
  Blocs   += $(SOOT_HOME)
endif

Bpack += $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir)/Make.package)
Blocs += $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir))

Bpack += $(foreach dir, $(Bdirs), $(dir)/Make.package)
Blocs += $(foreach dir, $(Bdirs), $(dir))

$(info $${Blocs} is [${Blocs}])

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS += $(AMREX_HOME)/Tools/C_scripts

ifdef Chemistry_Model
  MNAMES += CHEMISTRY=$(Chemistry_Model)
endif

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "$(MNAMES)" \
          --GIT "$(PELEC_HOME) $(AMREX_HOME) $(PELE_PHYSICS_HOME) $(SUNDIALS_HOME)"

include $(AMREX_HOME)/Tools/GNUMake/Make.rules

clean::
	$(SILENT) $(RM) AMReX_buildInfo.cpp

TPL:
	@echo "==> Building SUNDIALS library"
	cd $(PELE_PHYSICS_HOME)/ThirdParty; $(MAKE) sundials SUNDIALS_HOME=$(SUNDIALS_HOME) AMREX_HOME=$(AMREX_HOME) USE_CUDA=$(USE_CUDA) USE_HIP=$(USE_HIP) USE_SYCL=$(USE_SYCL) PELE_USE_KLU=$(PELE_USE_KLU) PELE_USE_MAGMA=$(PELE_USE_MAGMA) DEBUG=$(DEBUG) COMP=$(COMP) NVCC=$(COMP) PRECISION=$(PRECISION)

TPLclean:
	@echo "==> Removing SUNDIALS library"
	cd $(PELE_PHYSICS_HOME)/ThirdParty; make SUNDIALS_HOME=$(SUNDIALS_HOME) AMREX_HOME=$(AMREX_HOME) USE_CUDA=$(USE_CUDA) USE_HIP=$(USE_HIP) USE_SYCL=$(USE_SYCL) PELE_USE_KLU=$(PELE_USE_KLU) PELE_USE_MAGMA=$(PELE_USE_MAGMA) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP) PRECISION=$(PRECISION) clean

TPLrealclean:
	@echo "==> Removing SUNDIALS library"
	cd $(PELE_PHYSICS_HOME)/ThirdParty; make SUNDIALS_HOME=$(SUNDIALS_HOME) AMREX_HOME=$(AMREX_HOME) USE_CUDA=$(USE_CUDA) USE_HIP=$(USE_HIP) USE_SYCL=$(USE_SYCL) PELE_USE_KLU=$(PELE_USE_KLU) PELE_USE_MAGMA=$(PELE_USE_MAGMA) DEBUG=$(DEBUG) COMP=$(HOSTCC) NVCC=$(COMP) PRECISION=$(PRECISION) realclean

#-----------------------------------------------------------------------------
# for debugging.  To see the value of a Makefile variable,
# e.g. Fmlocs, simply do "make print-Fmlocs".  This will
# print out the value.
#print-%: ; @echo $* is $($*) ; $(SILENT) $(RM) AMReX_buildInfo.cpp
