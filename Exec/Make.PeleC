PELE_PHYSICS_HOME ?= $(PELE_HOME)/PelePhysics
PELEC_HOME        ?= $(PELE_HOME)/PeleC

TOP := $(PELEC_HOME)

EOS_HOME       = $(PELE_PHYSICS_HOME)/Eos
REACTIONS_HOME = $(PELE_PHYSICS_HOME)/Reactions
TRAN_HOME      = $(PELE_PHYSICS_HOME)/Transport

EBASE = PeleC

# EXTERN_CORE is simply a list of the directories we use in Eos, Reactions, Transport and Util
# this list will be searched for runtime parameters
EXTERN_CORE ?=

#USE_EB = TRUE
ifeq ($(DIM), 1)
  USE_EB = FALSE
endif

ifeq ($(USE_EB), TRUE)
  DEFINES += -DPELE_USE_EB -DPELEC_USE_EB
endif

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

# PeleC uses a coarse grained OMP approach
DEFINES += -DCRSEGRNDOMP

ifeq ($(USE_ACC), TRUE)
  DEFINES += -DACC
endif

ifeq ($(USE_REACT), TRUE)
  DEFINES += -DREACTIONS
endif

all: $(executable) 
	$(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS

# Hyperbolic integrator
ifeq ($(HYP_TYPE), MOL)
    DEFINES+=-DPELEC_USE_MOL
endif

# EOS
EOS_PATH := $(EOS_HOME)/$(strip $(Eos_dir))
include $(EOS_HOME)/Make.package
include $(EOS_PATH)/Make.package
EXTERN_CORE       += $(EOS_HOME) $(EOS_PATH)
INCLUDE_LOCATIONS += $(EOS_HOME) $(EOS_PATH)
VPATH_LOCATIONS   += $(EOS_HOME) $(EOS_PATH)
ifeq ($(Eos_dir), Fuego)
  TRANSPORT_TYPE := IDEAL_GAS
else
  ifeq ($(Eos_dir), GammaLaw)
    TRANSPORT_TYPE := IDEAL_GAS
  else
    TRANSPORT_TYPE := REAL_GAS
  endif
endif

# Reactions
REACTIONS_PATH := $(REACTIONS_HOME)/$(strip $(Reactions_dir))
include $(REACTIONS_HOME)/Make.package
include $(REACTIONS_PATH)/Make.package
EXTERN_CORE       += $(REACTIONS_HOME) $(REACTIONS_PATH)
INCLUDE_LOCATIONS += $(REACTIONS_HOME) $(REACTIONS_PATH)
VPATH_LOCATIONS   += $(REACTIONS_HOME) $(REACTIONS_PATH)
ifdef Chemistry_Model
  CHEM_HOME = $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Models/$(Chemistry_Model)
  VPATH_LOCATIONS += $(CHEM_HOME)
  Bpack += $(CHEM_HOME)/Make.package
  Blocs += $(CHEM_HOME)

  CHEM_HOME1 = $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism
  VPATH_LOCATIONS += $(CHEM_HOME1)
  Bpack += $(CHEM_HOME1)/Make.package
  Blocs += $(CHEM_HOME1)
endif

# Transport
TRAN_PATH := $(TRAN_HOME)/$(strip $(Transport_dir))
include $(TRAN_HOME)/Make.package
include $(TRAN_PATH)/Make.package
EXTERN_CORE       += $(TRAN_HOME) $(TRAN_PATH)
INCLUDE_LOCATIONS += $(TRAN_HOME) $(TRAN_PATH)
VPATH_LOCATIONS   += $(TRAN_HOME) $(TRAN_PATH)
USE_FUEGO = FALSE
ifeq ($(Transport_dir), EGLib)
  USE_FUEGO = TRUE
  DEFINES += -DEGLIB_TRANSPORT
  Bpack   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Make.package \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation/Make.package

  Blocs   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation
endif
ifeq ($(Transport_dir), Simple)
  DEFINES += -DSIMPLE_TRANSPORT
  Bpack   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism/Make.package \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation/Make.package

  Blocs   += $(PELE_PHYSICS_HOME)/Support/Fuego/Mechanism \
             $(PELE_PHYSICS_HOME)/Support/Fuego/Evaluation
endif
ifeq ($(Transport_dir), Constant)
  DEFINES += -DCONSTANT_TRANSPORT
endif

ifeq ($(DIM), 1)
DEFINES += -DHAS_XGRAPH
include $(TOP)/Util/plot1d/Make.package
INCLUDE_LOCATIONS += $(TOP)/Util/plot1d
VPATH_LOCATIONS   += $(TOP)/Util/plot1d
endif

Bdirs   := Source Source/param_includes Source/Src_nd Source/Src_$(DIM)d Source/TurbInflow

ifeq ($(USE_EB), TRUE)
  Pdirs := Base EB Amr Boundary AmrCore LinearSolvers/MLMG LinearSolvers/C_CellMG/
else 
  Pdirs := Base Amr Boundary AmrCore
endif

ifeq ($(USE_PARTICLES), TRUE)
  DEFINES+=-DAMREX_PARTICLES
  Pdirs += Particle
endif

Bpack	+= $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir))

Bpack	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir))

ifeq ($(USE_PARTICLES), TRUE)
  Bpack   += $(PELEC_MP_HOME)/Source/PP_Spray/Make.package
  Blocs   += $(PELEC_MP_HOME)/Source/PP_Spray
  INCLUDE_LOCATIONS += $(AMREX_HOME)/Src/Particle
  VPATH_LOCATIONS   += $(AMREX_HOME)/Src/Particle
endif

$(info $${Blocs} is [${Blocs}])

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

include $(TOP)/constants/Make.package
EXTERN_CORE += $(TOP)/constants
INCLUDE_LOCATIONS += $(TOP)/constants
VPATH_LOCATIONS   += $(TOP)/constants

INCLUDE_LOCATIONS += $(AMREX_HOME)/Src/EB

# runtime parameter support for extern/ routines
f90EXE_sources += extern.f90

EXTERN_TEMPLATE := $(TOP)/Source/extern_probin.template

EXTERN_PARAMETERS := $(shell $(AMREX_HOME)/Tools/F_scripts/findparams.py $(EXTERN_CORE))

extern.f90: $(EXTERN_PARAMETERS) $(EXTERN_TEMPLATE)
	$(AMREX_HOME)/Tools/F_scripts/write_probin.py \
           -t $(EXTERN_TEMPLATE) -o extern.f90 -n extern \
           --pa "$(EXTERN_PARAMETERS)" 

# job_info support
CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS +=  $(AMREX_HOME)/Tools/C_scripts


MNAMES := EOS=$(EOS_PATH) REACTIONS=$(REACTIONS_PATH)
MNAMES += TRANSPORT=$(TRAN_HOME)
ifdef Chemistry_Model
  MNAMES += CHEMISTRY=$(Chemistry_Model)
endif

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "$(MNAMES)" \
          --GIT "$(TOP) $(AMREX_HOME) $(PELE_PHYSICS_HOME)"

include $(AMREX_HOME)/Tools/GNUMake/Make.rules

clean::
	$(SILENT) $(RM) extern.f90
	$(SILENT) $(RM) AMReX_buildInfo.cpp


#-----------------------------------------------------------------------------
# for debugging.  To see the value of a Makefile variable,
# e.g. Fmlocs, simply do "make print-Fmlocs".  This will
# print out the value.
print-%: ; @echo $* is $($*) ; $(SILENT) $(RM) AMReX_buildInfo.cpp
