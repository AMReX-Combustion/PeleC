# ------------------  INPUTS TO MAIN PROGRAM  -------------------
# max_step = 100
stop_time = 0.05

# PROBLEM SIZE & GEOMETRY
geometry.is_periodic =  0  0  0
geometry.coord_sys   =  0       # 0 => cart
geometry.prob_lo     =  -2.   -2.  -2.
geometry.prob_hi     =  10.  2.   2.
amr.n_cell           =  192 64 16

# >>>>>>>>>>>>>  BC KEYWORDS <<<<<<<<<<<<<<<<<<<<<<
# Interior, UserBC, Symmetry, SlipWall, NoSlipWall
# >>>>>>>>>>>>>  BC KEYWORDS <<<<<<<<<<<<<<<<<<<<<<

pelec.lo_bc       =  "Hard" "SlipWall" "FOExtrap"
pelec.hi_bc       =  "Hard" "SlipWall" "FOExtrap"

# Problem setup
prob.p = 1013250.
prob.T = 298.
prob.Re = 500.
prob.Ma = 0.2
prob.Pr = 0.7
pelec.eb_boundary_T = 298.
pelec.eb_isothermal = 1

# WHICH PHYSICS
pelec.do_hydro = 1
pelec.do_mol = 0
pelec.do_react = 0
pelec.allow_negative_energy = 0
pelec.diffuse_temp = 1
pelec.diffuse_vel  = 1
pelec.diffuse_spec = 0
pelec.diffuse_enth = 1

# TIME STEP CONTROL
pelec.dt_cutoff      = 5.e-20  # level 0 timestep below which we halt
pelec.cfl            = 0.7     # cfl number for hyperbolic system
pelec.init_shrink    = 0.1    # scale back initial timestep
pelec.change_max     = 1.05     # maximum increase in dt over successive steps

# DIAGNOSTICS & VERBOSITY
pelec.sum_interval   = 1       # timesteps between computing mass
pelec.v              = 1       # verbosity in PeleC cpp files
amr.v                = 1       # verbosity in Amr.cpp
#amr.grid_log         = grdlog  # name of grid logging file

# REFINEMENT / REGRIDDING
amr.max_level       = 0       # maximum level number allowed
amr.ref_ratio       = 2 2 2 2 # refinement ratio
amr.regrid_int      = 5       # how often to regrid
amr.blocking_factor = 16       # block factor in grid generation
amr.max_grid_size   = 64

# CHECKPOINT FILES
amr.checkpoint_files_output = 1
amr.check_file      = chkReHigh      # root name of checkpoint file
amr.check_int       = 100000       # number of timesteps between checkpoints

# PLOTFILES
amr.plot_files_output = 1
amr.plot_file       = pltReHigh
amr.plot_int        = 20000
amr.derive_plot_vars=ALL

# EB
ebd.boundary_grad_stencil_type = 0

# for 2D (need a sphere):
eb2.geom_type = "sphere"
eb2.sphere_radius = 0.5
eb2.sphere_center = 0 0 0
eb2.sphere_has_fluid_inside = 0
eb2.small_volfrac = 1.0e-4

