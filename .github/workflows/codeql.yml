name: "CodeQL"

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

jobs:
  analyze:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release, Debug]
        include:
          - os: ubuntu-latest
            install_deps: sudo apt-get update && sudo apt-get install mpich libmpich-dev ninja-build
            comp: gnu
            procs: $(nproc)

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{github.token}}
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Setup
        run: |
          echo "NPROCS=${{matrix.procs}}" >> $GITHUB_ENV
          cmake -E make_directory ${{runner.workspace}}/deps
      - name: Dependencies
        run: |
          # Install MPI
          ${{matrix.install_deps}}
          # Install Python packages
          python -m pip install --upgrade pip
          pip install nose numpy pandas
      - name: Configure
        run: |
          (for DIM in 2 3; do \
            printf "\n-------- Configuring ${DIM}D --------\n"; \
            cmake -G Ninja \
            -B${{runner.workspace}}/build-${DIM}d-${{matrix.os}}-${{matrix.build_type}} \
            -DCMAKE_INSTALL_PREFIX:PATH=${{runner.workspace}}/install-${DIM}d-${{matrix.os}}-${{matrix.build_type}} \
            -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} \
            -DPELEC_DIM:STRING=${DIM} \
            -DPELEC_ENABLE_MPI:BOOL=ON \
            -DPELEC_ENABLE_FCOMPARE_FOR_TESTS:BOOL=OFF \
            -DPELEC_ENABLE_MASA:BOOL=OFF \
            ${{github.workspace}}; \
            if [ $? -ne 0 ]; then exit 1; fi \
          done)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp
          queries: +security-and-quality
      - name: Build
        run: |
          (for DIM in 2 3; do \
            printf "\n-------- Building ${DIM}D --------\n"; \
            cmake --build ${{runner.workspace}}/build-${DIM}d-${{matrix.os}}-${{matrix.build_type}} \
              --parallel ${{env.NPROCS}} 2>&1 | tee -a ${{runner.workspace}}/build-output.txt; \
            if [ ${PIPESTATUS[0]} -ne 0 ]; then exit 1; fi \
          done)
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:cpp"
